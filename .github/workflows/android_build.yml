name: Android Nightly Build

on:
  schedule:
    # ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 00:00 UTC (07:00 ‡∏ô. ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢)
    - cron: '0 0 * * *'
  workflow_dispatch:  # ‡∏Å‡∏î‡∏£‡∏±‡∏ô‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Check if today's nightly already exists
        id: check_release
        run: |
          TAG_PREFIX="nightly-${{ steps.date.outputs.date }}"
          echo "Checking for tag: $TAG_PREFIX"
          if gh release view $TAG_PREFIX >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip if nightly already exists
        if: steps.check_release.outputs.exists == 'true'
        run: echo "Nightly for today already exists. Skipping build."

      - name: Get Flutter dependencies
        if: steps.check_release.outputs.exists == 'false'
        run: flutter pub get

      - name: Build APK
        if: steps.check_release.outputs.exists == 'false'
        run: flutter build apk --release

      - name: Build App Bundle
        if: steps.check_release.outputs.exists == 'false'
        run: flutter build appbundle --release

      - name: Get short SHA
        if: steps.check_release.outputs.exists == 'false'
        id: sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Nightly Release
        if: steps.check_release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly-${{ steps.date.outputs.date }}-${{ steps.sha.outputs.sha }}
          name: Nightly Build ${{ steps.date.outputs.date }}
          body: |
            üåô **Nightly Build**

            **Date:** ${{ steps.date.outputs.date }}
            **Commit:** ${{ steps.sha.outputs.sha }}
            **Branch:** ${{ github.ref_name }}

            This is an automated nightly build. Use at your own risk!
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üßπ Cleanup old nightly releases (older than 7 days)
        if: always()
        run: |
          echo "Cleaning up nightly releases older than 7 days..."
          gh release list --limit 100 --json tagName,createdAt -q '.[] | select(.tagName | startswith("nightly-")) | [.tagName, .createdAt]' |
          while read -r line; do
            TAG=$(echo "$line" | awk '{print $1}' | tr -d '[]" ,')
            DATE=$(echo "$line" | awk '{print $2}' | tr -d '[]" ,')
            if [ -n "$DATE" ]; then
              SECONDS_OLD=$(( ($(date +%s) - $(date -d "$DATE" +%s)) / 86400 ))
              if [ "$SECONDS_OLD" -gt 7 ]; then
                echo "üóëÔ∏è Deleting old nightly: $TAG (Age: ${SECONDS_OLD} days)"
                gh release delete "$TAG" --yes || true
                gh tag delete "$TAG" || true
              fi
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
